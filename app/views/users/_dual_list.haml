:css
  .list-group-item {text-align:left;}
.modal-body
  %div
    %p{style: "margin-bottom: 30px;"} Choose the leads & opportunities you want to move to the other side.
    .dual-list.list-left.fl{style: "width:45%"}
      %p.dual_list_desc Unassigned leads & opportunities
      .list-group-cntr  
        .well.text-right
          .list_group_space
          .row
            .col-md-10.padrht
              .input-group
                %span.input-group-addon.glyphicon.glyphicon-search
                %input.form-control{:name => "SearchDualList", :placeholder => "search", :type => "text"}/
            .col-md-2
              .btn-group
                %a.btn.btn-default.selector{:title => "select all",style:"padding: 11px 15px;"}
                  %i.cwkp-sprite.dual_list_unchecked{style:"margin-right: 0;"}
          %ul.list-group
            - not_assigned_deals = current_user.organization.deals.where("assigned_to IS NULL OR assigned_to != ?", @user.id)
            - not_assigned_deals.each do |l|
              %li.list-group-item{:id=>"#{l.id}"}
                %span.cwkp-sprite.dual_list_check_box
                %span{title: l.title.size > 40 ? l.title : ""}
                  = l.title.truncate(40)
    .list-arrows.text-center.fl{style: "width:10%"}
      %button.btn.btn-default.btn-sm.move-left{style:"margin-right: 0;"}
        %span.cwkp-sprite.chevron-left
      %button.btn.btn-default.btn-sm.move-right{style:"margin-right: 0;"}
        %span.cwkp-sprite.chevron-right
    .dual-list.list-right.fl{style: "width:45%"}
      %p.dual_list_desc 
        - ld_name = @user.full_name.present? ? @user.full_name : @user.email
        %span{title: ld_name.size > 30 ? ld_name : ""}
          = "Lead assigned to '#{ld_name.truncate(30)}'" 
      .list-group-cntr
        .list_group_space
        .well
          .row
            .col-md-10.padrht
              .input-group
                %input.form-control{:name => "SearchDualList", :placeholder => "search", :type => "text"}/
                %span.input-group-addon.glyphicon.glyphicon-search
            .col-md-2
              .btn-group
                %a.btn.btn-default.selector{:title => "select all",style:"padding: 11px 15px;"}
                  %i.cwkp-sprite.dual_list_unchecked{style:"margin-right: 0;"}
          %ul.list-group
            - @user.all_assigned_deal.each do |l|
              %li.list-group-item{:id=>"#{l.id}"}
                %span.cwkp-sprite.dual_list_check_box
                %span{title: l.title.size > 40 ? l.title : ""}
                  = l.title.truncate(40)
    .cb
.modal-footer{style: "margin-top: 15px;"}
  %button.btn.btn-default{"data-dismiss" => "modal", :type => "button"} Close
  = submit_tag "Save", :class=> "btn btn-info save_btn", :disable_with => "Please wait ...",:onclick=> "update_assign_lead('#{@user.id}')", disabled: true

:javascript
  $(function () {
      $(".dual_list_check_box").addClass("dual_list_unchecked");
      $(".list-group-item").click(function(){
        if($(this).hasClass("active")){
          $(this).find(".dual_list_check_box").removeClass("dual_list_checked");
          $(this).find(".dual_list_check_box").addClass("dual_list_unchecked");
        }else{
          $(this).find(".dual_list_check_box").removeClass("dual_list_unchecked");
          $(this).find(".dual_list_check_box").addClass("dual_list_checked");
        }
      }) 
      $(".selector").click(function(){
        if($(this).hasClass("selected")){
          $(this).parentsUntil(".dual-list").find(".dual_list_check_box").each(function() {
            $( this ).removeClass("dual_list_checked");
            $( this ).addClass( "dual_list_unchecked" );
          });
        }else{
          $(this).parentsUntil(".dual-list").find(".dual_list_check_box").each(function() {
            $( this ).addClass("dual_list_checked");
            $( this ).removeClass( "dual_list_unchecked" );
          });
        }
      }) 
      //$(".list-group-item").on('click', '.list-group .list-group-item',
      $(".list-group-item").on('click', function () {
          $(this).toggleClass('active');
      });
      $('.list-arrows button').click(function () {
          var $button = $(this), actives = '';
          if ($button.hasClass('move-left')) {
              actives = $('.list-right ul li.active');              
              actives.clone().appendTo('.list-left ul');
              actives.remove();
              left_deal_ids=[];
              if($('.list-left ul li.active').length != "0"){
                $(".save_btn").prop('disabled', false);
              }
              $('.list-left ul li.active').each(function() {
                left_deal_ids.push($(this).attr("id"));
              });
              $('#hdn_unassign_deals').val(left_deal_ids);
          } else if ($button.hasClass('move-right')) {
              actives = $('.list-left ul li.active');
              actives.clone().appendTo('.list-right ul');
              actives.remove();
              right_deal_ids=[];
              if($('.list-right ul li.active').length != "0"){
                $(".save_btn").prop('disabled', false);
              }
              $('.list-right ul li.active').each(function() {
                right_deal_ids.push($(this).attr("id"));
              });
              $('#hdn_assign_deals').val(right_deal_ids);
          }
      });
      $('.dual-list .selector').click(function () {
          var $checkBox = $(this);
          if (!$checkBox.hasClass('selected')) {
              $checkBox.addClass('selected').closest('.well').find('ul li:not(.active)').addClass('active');
              $checkBox.children('i').removeClass('dual_list_unchecked').addClass('dual_list_checked');
          } else {
              $checkBox.removeClass('selected').closest('.well').find('ul li.active').removeClass('active');
              $checkBox.children('i').removeClass('dual_list_checked').addClass('dual_list_unchecked');
          }
      });
      $('[name="SearchDualList"]').keyup(function (e) {
          var code = e.keyCode || e.which;
          if (code == '9') return;
          if (code == '27') $(this).val(null);
          var $rows = $(this).closest('.dual-list').find('.list-group li');
          var val = $.trim($(this).val()).replace(/ +/g, ' ').toLowerCase();
          $rows.show().filter(function () {
              var text = $(this).text().replace(/\s+/g, ' ').toLowerCase();
              return !~text.indexOf(val);
          }).hide();
      });

  });