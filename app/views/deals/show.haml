=render partial: "/projects/create_project_popup"
-@deal_org=@deal
-content_for :title,@deal.title
= javascript_include_tag "skypeCheck"
= stylesheet_link_tag "uploadfile.min"
= hidden_field_tag "contact_type", "#{@deal.contact_type if @deal.contact_type.present?}"
= hidden_field_tag "cur_selected_contact", ""
= hidden_field_tag "deal_id_timeout", @deal.id
= hidden_field_tag "deal_assignid", @deal.assigned_to
= hidden_field_tag "deal_contacts_id", @deal.deals_contacts.select(:contactable_id).collect(&:contactable_id).join(",")
-deal_cl = @deal.priority_type.present? ? @deal.priority_type.name.downcase : "na"
- if @deal.deals_contacts.present? && @deal.deals_contacts.first.contactable.present?
  - @contact = @deal.deals_contacts.first.contactable
  - @name = @contact.class.name == "IndividualContact" ? (@contact.full_name.present? ? @contact.full_name : @contact.email) : @contact.name
  /- @cont_type = @contact.deals_contacts.present? ? 'Lead' : 'Contact'
  - @cont_type = 'Account'
.normalheader.small-header
  .hpanel
    .panel-body
      %a.small-header-action{:href => ""}
        .clip-header
          %i.fal.fa-arrow-up
      #hbreadcrumb.pull-right
        %ol.hbreadcrumb.breadcrumb
          %li
            %a{:href => "/leads"} Leads
          %li.active
            %span List View
        /=render :partial=>"filters"
      %h2.font-light.m-b-xs 
        %i.fal.fa-suitcase
        = @deal.title.truncate(40)
      %small
    .p-sm.m-t
      .panel-body
        .opp_status_bar_sec
          = render partial: "opp_status_bar"
.ling_mcnt.lead-details-page
  .row
    .col-lg-4
      = render :partial => "top_lead_details"
      = render :partial => "lead_short_details"
    .col-lg-8
      .hpanel.m-b-none
        %ul.nav.nav-tabs
          %li.active
            %a{"aria-expanded" => "false", "data-toggle" => "tab", href: "new", onclick: "load_activity_cum_deals('activity_stream')", :class=> "activity_stream-tab active"}
              %span.fal.fa-chart-line
              Activity
          %li
            %a{"aria-expanded" => "true", "data-toggle" => "tab", href: "javascript:void(0)", onclick: "load_activity_cum_deals('quick_notes')", :class=> "quick_notes-tab"}
              %span.fal.fa-sticky-note
              Notes
          %li
            %a{"aria-expanded" => "false", "data-toggle" => "tab", href: "javascript:void(0)", onclick: "load_activity_cum_deals('task_list')", :class=> "task_list-tab"}
              %span.fal.fa-tasks
              Tasks

          %li
            %a{"aria-expanded" => "false", "data-toggle" => "tab", href: "new", onclick: "load_activity_cum_deals('emails')", :class=> "emails-tab"}
              %span.fal.fa-envelope
              Emails
          %li
            %a{"aria-expanded" => "false", "data-toggle" => "tab", href: "new", onclick: "load_activity_cum_deals('upload_files')", :class=> "upload_files-tab"}
              %span.fal.fa-file-upload
              Upload Files
          %li
            %a{"aria-expanded" => "false", "data-toggle" => "tab", href: "new", onclick: "load_activity_cum_deals('quotes')", :class=> "upload_files-tab"}
              %span.fal.fa-quote-left
              Quotes
          %li
            %a{"aria-expanded" => "false", "data-toggle" => "tab", href: "new", onclick: "load_activity_cum_deals('invoices')", :class=> "upload_files-tab"}
              %span.fal.fa-file-invoice
              Invoice
          %li
            %a{"aria-expanded" => "false", "data-toggle" => "tab", href: "new", onclick: "load_activity_cum_deals('projects')", :class=> "upload_files-tab"}
              %span.fal.fa-briefcase
              Projects
        .panel-body.brd-top-0
          .activity_cum_deals_div.cmn_cl
    
  


= render :partial => "shared/move_deal",:cache=> true    
= render :partial => "edit_deal"  
#showVisited.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "myModalLabel", role: "dialog", tabindex: "-1","data-replace"=>"true"}
  .modal-dialog.pop-lrg
    .modal-content
      .color-line
      .modal-header
        %span.fr.clse_pop{"aria-hidden" => "true", "data-dismiss" => "modal"}
          %i.fal.fa-times.fa-2x
        %h4.modal-title Visitor Path
      .modal-body.visitoverflow
        .row
          .form-group.col-md-6
            Page
        .row
          .form-group.col-md-12
            - i=0
            %table.table.table-striped
              - if @deal_org.visited.present?
                - @deal_org.visited.split(',').each do |visit|
                  %tr{:height=>"30px"}
                    %td
                      = i += 1
                    %td{:width => "10px"}
                    %td
                      = visit
              
      .modal-footer
        /%button.btn.btn-primary{type: "submit",id: "add_con","data-disable-with" => "Saving...", onclick: "return chk_con_id();"} Save  
        %a{href:"#", "aria-hidden" => "true","data-dismiss" => "modal"}
          %span.c_links
            Close

#addCon.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "myModalLabel", role: "dialog", tabindex: "-1"}
  .modal-dialog.pop-lrg
    .modal-content
      .color-line
      .modal-header
        %span.fr.clse_pop{"aria-hidden" => "true", "data-dismiss" => "modal"}
          %i.fal.fa-times.fa-2x
        %h4.modal-title Add Contact
      = form_tag(add_contact_path,:id=>"associate_con", :remote => true) do |f|
        .modal-body
          .row 
            .form-group.col-md-6
              =text_field_tag :first_name,"",:class=>"col-md-12 custom-frm-inner typeahead",:onkeypress=>"clear_value()", "data-provide"=> "typeahead" , :autocomplete=>"off", :required => true
              %label.control-label{:for => "input"} Contact
              %i.bar
              
              %div{id: "show_er",class: "error",style: "display:none;"}
              =hidden_field_tag 'contactable_id'
              =hidden_field_tag 'contactable_type'
              =hidden_field_tag "deal_id","#{params[:id]}"
              //%input{:type=>"hidden",:id=>"extension_contact_popup",:name=> "extension_contact_popup"}
            .form-group.col-md-6
              
              %input#email.inp_txt{name: "email",type: "email", value: "", required: "true"}/
              %label.control-label{:for => "input"} Email
              %i.bar 
              %div{id: "show_er_deal_em",class: "error",style: "display:none;"}
          .row
            .form-group.col-md-6
              =text_field_tag "company_value", "",:size=>"32" ,:class=>"custom-frm-inner company_value_typeahead", "data-provide"=> "typeahead", :id=>"comp_name", :autocomplete=>"off",onkeypress:"$('#comp_id').val('')",onkeyup:"$('#text_loader').show()"
              %label.control-label{:for => "input"} Company name
              %i.bar
              =hidden_field_tag "comp_id"
            .form-group.col-md-6
              = time_zone_select :time_zone, "contact", ActiveSupport::TimeZone.us_zones,{}, {:default=> @current_user.time_zone}
              %label.control-label{:for => "time_zone"} - Select Time Zone -
              %i.bar
          .row
            .form-group.col-md-6
              - @coun = Country.find(:all)
              .input-group
                .input-group-addon
                  %span.fal.fa-flag
                = select_tag "country", options_from_collection_for_select(@coun, "id", "name"), :prompt => "- Country -", :class => 'form-control', :required => true, :onchange => "prefill_extension(this.value,'extension_for_contact_deal','extension_contact_popup')"
            .form-group.col-md-6 
              .input-group
                .input-group-addon
                  %span#extension_for_contact_deal +1
                = text_field_tag :work_phone,"", :id=>"work_phone",:value=>"", :class => "form-control bfh-phone","data-format"=>" (ddd) ddd dddd dddd",:placeholder=>"(999) 999 9999", :required => true
        .modal-footer
          %a.btn.btn-default{href:"#", "aria-hidden" => "true","data-dismiss" => "modal"}
            Cancel
          %button.btn.btn-info{type: "submit",id: "add_con","data-disable-with" => "Saving...", onclick: "return chk_con_id();"} Save  

#dealmoveshow.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "myModalLabel", role: "dialog", tabindex: "-1"}
  .modal-dialog.pop-lrg
    .modal-content
      .color-line
      -@deal= DealMove.new
      = form_for(@deal,:url=>move_lead_path, :remote => true,  :html=>{:class => "form",:method=>"post",:id=>"move_deal_stage"}) do |f|
        .modal-header{style: "padding: 5px;"}
          %span.fr.clse_pop{"aria-hidden" => "true", "data-dismiss" => "modal"}
            %i.fal.fa-times.fa-2x
          %h4.modal-title Change Deal Stage
        .modal-body
          .row#user_change_stage 
            .form-group.col-md-6{style: "line-height:3" }
              %label
                Assigned User
              .input-group
                .input-group-addon
                  %span.fal.fa-user
                = select_tag "assigned_to_user", options_for_select(all_org_users.collect {|c| [ c.full_name, c.id ]}), :prompt => '- Users -',:class=>"col-md-3 form-control", :required => true
                %label.control-label{:for => "assigned_to_user"} - Users -
                %i.bar
          .cb
          .form-group
            .input-group
              .input-group-addon
                %span.fal.fa-pen-fancy
              =f.text_area :note ,:class=> "col-md-12 form-control",:html=>{:maxlength=> "80"}, :style=> "resize: none;",:rows=>"3", :id =>"add_note" 
              %label.control-label{:for => "input"} Note
              %i.bar
          .cb
             
          %input{:type=>"hidden",:name=>"deal_id",:value=>"",:id=>"deal_id_show"}
          = f.hidden_field :deal_status
          //%input{:type=>"hidden",:id=>"extension_contact_popup",:name=> "extension_contact_popup"}
        
          
        .modal-footer{style: "margin-bottom:15px"}
          .pull-left
            %button{type: "submit",id: "add_con","data-disable-with" => "Saving...", onclick: "return chk_con_id();"} Save  
            %a{href:"#", "aria-hidden" => "true","data-dismiss" => "modal"}
              %span.c_links
                Cancel
                
                
#noteTextModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "myModalLabel", role: "dialog", tabindex: "-1", style: "display:none;"}
  .modal-dialog
    .modal-content
      .color-line
      .add_note_form  
        - note = Note.new
        = form_for(note, :url=> "/add_notes", :remote=> true, :html=>{:class => "form cmn_new_popup_form",:method => "post",:id=>"new-notes-popup",:multipart => true}) do |f|
          = hidden_field_tag :notable_type, "Deal"
          = hidden_field_tag :notable_id, @deal.id.to_s
          = hidden_field_tag :remove_file_ids
          .modal-header{style:"padding: 10px 0;"}
            %button.close{"aria-hidden" => "true", type: "button", "data-dismiss" => "modal", style:"margin-top:0"} ×
            %span.cwkp-sprite.add_note_header_icon
            %h4.modal-title{style:"display:inline-block;vertical-align:middle;"}
              ="Add Note".upcase  
          .modal-body
            .show_title_sec{style: "display:none;"}
              .row  
                .form-group.col-md-12
                  .form_fld
                    %span.cwkp-sprite.note_title_cls
                    =f.text_field :title, :required => true, placeholder:"Note Title", class: "form-control"
              .row
                .form-group.col-md-12
                  .form_fld.cmn_selct_fld
                    %span.cwkp-sprite.note_type
                    = f.select :note_type_id, @current_organization.note_types.collect {|c| [ c.name, c.id ]}, {:include_blank => 'Note Type'},  :required => "true", :class=>"form-control"
            .row  
              .form-group.col-md-12
                .form_fld
                  %span.cwkp-sprite.lead_email
                  =hidden_field_tag "hidden_note","",name: "note[notes]"
                  =f.text_area :notes, :required => true, :style=> "resize: none;    width: 100%;outline: none;", :rows=>"4",:onblur =>"this.value = jQuery.trim((this.value).replace(/^\s*/g,''))", placeholder:"Write your message", class: "form-control"
          .modal-footer{style:"margin-top: 5px;"}
            =hidden_field_tag "note_from_deal", true
            =hidden_field_tag "temp_file_ids", "", class: "temp_file_ids"
            .show_attachment_error{style: "color: red;"}
            %div{:style=>"overflow:auto;width:100%"}
              #fileuploader
                %span.cwkp-sprite.attach
            #show_file_name
            .cb
              %a.btn.btn-default{href:"#", "aria-hidden" => "true","data-dismiss" => "modal"}
                Cancel
              %button.btn.btn-info{type: "submit", disable_with: "Please wait...", id: "notes_submit_btn"} Save
#ViewImageModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "myModalLabel", role: "dialog", tabindex: "-1"}
  .modal-dialog.new_form_layout
    .modal-content
      .color-line
      .modal-header
        %span.fr.clse_pop{"aria-hidden" => "true", "data-dismiss" => "modal"}
          %i.fal.fa-times.fa-2x
        %h4.modal-title
          %span.fal.fa-image
          View Image
      .modal-body
=hidden_field_tag 'deal_show', 'dealshow'
:javascript
  //$(document).ready(function() {
  //  $('#note_notes').wysiwyg({
  //  rmUnusedControls: true,
  //  controls: {
  //      bold: { visible : true },
  //      underline: { visible: true },
  //      italic: { visible: true },
  //      insertOrderedList: { visible: true },
  //      insertUnorderedList: { visible: true }
  //      
  //  }
  //  });
  //});
  $(document).ready(function() {
    initial_more_link();
    load_activity_cum_deals('activity_stream');
    $('#addCon').on('show.bs.modal', function (e) {      
      $("#comp_name").val("").prop("readonly",false).removeAttr("disabled");
    });
    $("#comp_name").prop("readonly",false);
    if(history.length > 1){
      $('#hide_back').show();
    }
     else{
      $('#reset_height').addClass("cb10");
      $('#hide_back').hide();
     }
  
      //reload_deal_contacts();
      
      $.ajax({
        type: "GET",
        url: "/lead_files",
        data: {dealid: $("#deal_id").val()},
        async: true,
        beforeSend: function(){
          //$("#task_loader").show();
        },
        success: function(data)
        {
        },
        error: function(data) {
          //$("#task_loader").hide();
        },
        complete: function(data) {
          $("#notes_attach").html(data.responseText);
        }
      });
    $('input[type=radio][name=link_lead]').change(function() {
      if (this.value == 'yes') {
        $("#lead_section").show();
        $("#project_individual_contact_id").prop("required",true);
        $("#project_deal_id").prop("required",true);
      }
      else{
        $("#lead_section").hide();
        $("#project_individual_contact_id").prop("required",false).val("");
        $("#project_deal_id").prop("required",false).val("");
      }
    });
   });
   function initial_more_link(){
    var showChar = 268;
    var ellipsestext = "...";
    var moretext = "more";
    var lesstext = "less";
    $('.more').each(function() {
        $('.morecomment').show();
        var content = $(this).html();
        if(content.length > showChar) {
            var c = content.substr(0, showChar);
            var h = content.substr(showChar, content.length - showChar);
            var html = c + '<span class="moreellipses">' + ellipsestext+ '&nbsp;</span><span class="morecontent"><span>' + h + '</span>&nbsp;&nbsp;<a href="" class="morelink">' + moretext + '</a></span>';
            $(this).html(html);
        }
    });
  
    $(".morelink").click(function(){
        if($(this).hasClass("less")) {
            $(this).removeClass("less");
            $(this).html(moretext);
        } else {
            $(this).addClass("less");
            $(this).html(lesstext);
        }
        $(this).parent().prev().toggle();
        $(this).prev().toggle();
        return false;
    });
   }  
   Array.prototype.removeByValue = function(val) {
      for(var i=0; i<this.length; i++) {
          if(this[i] == val) {
              this.splice(i, 1);
              break;
          }
      }
  } 
  function store_cookie(tag,url)
  {
    document.cookie="tag="+tag+";path=/";
    window.location.href = url;
  }
  
  function clear_value(){
    $('#contactable_id').val('');
    $('#time_zone_contact').val('Hawaii');
    $('#work_phone').val('');
    $('#email').val('');
    $('#country').val('');
    $('#extension_for_contact_deal').html('+1');
    $('#comp_name').val('').prop('readonly',false).removeAttr('disabled');
    $('#show_er').html('');
   }
   function remove_note()
   {
    $('#note_notes').val('');
    //$("#deal_note_div").hide('slow');
    $("#show_file_name").hide();
    $(".ajax-file-upload-statusbar").remove();
    $("#temp_file_ids").val("");
   }
   function reload_deal_contacts(){     
      $.ajax({
        type: "GET",
        url: "/lead_detail_contacts",
        data: {dealid: $("#deal_id").val()},
        async: true,
        beforeSend: function(){
          //$("#task_loader").show();
        },
        success: function(data)
        {
          //$("#task_loader").hide();
        },
        error: function(data) {
          //$("#task_loader").hide();
        },
        complete: function(data) {
          $("#deal_detail_contacts_div").html(data.responseText);
          $("#task_loader").hide();
        }
      });
   }
  $("#first_name").keypress(function() {
  $('#first_name').addClass('loadinggif');
   setTimeout(hideascontactload, 510);
  });
  
  function reload_task_widget(){
    $.ajax({
        type: "POST",
        url: "/task_widget_reload",
        dataType: 'json',
        data: {deal_id: $("#deal_id").val()},
        async: true,
        beforeSend: function(){
          $("#ajax-loader_task").show();
      
        },
        success: function(data)
        {
          
         $("#ajax-loader_task").hide();
        },
        error: function(data) {
          $("#ajax-loader_task").hide();
        },
        complete: function(data) {
          
          $("#task_header").html(data.responseText);
          $("#ajax-loader_task").hide();
          //timeout_trigger();
        }
    });
  }

  function hideascontactload()
  {
    $('#first_name').removeClass('loadinggif');
  }
   $('#show_nt_deal_div').click(function () {
     //$('#deal_note_div').slideToggle('slow');
   });
  //$('.detail_note').hide();
  $('.note_heading').click(function () {
      $(this).parent().find('.detail_note').slideToggle();
      if($(this).find('.span1').attr('id') == 'yes') {
          $(this).find('.span1').attr('id', '').html('&#x2B;');
      } else {
          $(this).find('.span1').attr('id', 'yes').html('&#x96;');
      }
    });    
  function getd(id){
    $('#'+id).val($('textarea').val().replace(/\n/g, "<br />"));
  }
  function chk_con_id()
  {
   var con_id = $("#contactable_id").val();
   var name = $("#first_name").val();
   var email = $("#email").val();
   var deal_contacts_id = $("#deal_contacts_id").val();
   var trainindIdArray = deal_contacts_id.split(',');
   if(con_id != ""){
   for(i = 0; i< trainindIdArray.length; i++){
     if(trainindIdArray[i] == con_id) {
       $("#show_er").show();
       $("#show_er").html('Contact is already associated.');
       return false
     }
     else
     {
      $("#show_er").show();
     }
   }
   }
   var atpos=email.indexOf("@");
   var dotpos=email.lastIndexOf(".");
   if (email != '' && (atpos<1 || dotpos<atpos+2 || dotpos+2>=email.length))
  {
   $("#show_er_deal_em").show();
   $("#show_er_deal_em").html('Please enter a valid email address.');
   return false;
  }
  else
  {
    $("#show_er_deal_em").hide();
  }
  
  }
  $('#first_name.typeahead').typeahead([{
    name: 'contacts',
    valueKey: 'name',
    remote: {url: '/get_contacts/'+ #{@current_user.organization_id}+ '?q=%QUERY'},
    template: "<p style='word-wrap: break-word;'><strong>{{name}}</strong> - {{email}}</p>",
    engine: Hogan
    }]).on('typeahead:selected',onSelected).on('typeahead:opened',onOpened);
  function onSelected($e,datum){
    console.log("autocompleted");
    console.log(datum);
    //alert(datum);
           
    //    var hfield = document.getElementById('hfield');
    var email = document.getElementById('email');
    var country = document.getElementById('country');
    var workphone = document.getElementById('work_phone');
    var comp_name = document.getElementById('comp_name');
    var time_zone = document.getElementById('time_zone_contact');
    if((datum.company_type == "IndividualContact" && datum.company_name != "") || datum.company_type == "CompanyContact")
    {
      comp_name.value = datum.comp_name;
      $("#comp_name").prop("readonly",true).prop("disabled",true);
    }
   console.log(datum.id);
    //    hfield.value = datum.id;
    $("#contactable_id").val(datum.id);
    $("#contactable_type").val(datum.company_type);
    email.value = datum.email;
    country.value=datum.country_id;
    workphone.value = datum.phone_no;
    time_zone.value = datum.time_zone;
    $("#country").trigger("change");
  }
  function onOpened($e){
  //$("#contactable_id").val("")
  console.log('Opned');
  }
  function hide_box()
  {
   $("#note_notes").animate({height:'40px'});
   $(".other_note_fields").hide(400);
   $(".btn_upload").hide(400);
   $(".file_des").hide(400);
   $(".sav_btn").hide(400);
  }
  //$('textarea').focus(function(){
      //$(this).animate({height:'100px'});
      //$(".other_note_fields").show(400);
      //$(".sav_btn").show(400);
  //});
  
  //$('#upld_file').click(function(){
      //$(this).animate({height:'17px'});
      //$(".btn_upload").show(400);
      //$(".file_des").show(400);
  //});
  $('.company_value_typeahead').typeahead([{
    name: 'company_contacts',
    valueKey: 'company_name',
    remote: {url: '/get_companies/'+ #{current_user.organization.id}+ '?q=%QUERY'},
    template: '<p><strong>{{company_name}}</strong></p>',
    engine: Hogan
    }]).on('typeahead:selected',onSelectedCompTask).on('typeahead:opened',onCompOpened);
   
  function onSelectedCompTask($e,datum){
    var hfield = document.getElementById('comp_id');
    var ctime_zone = document.getElementById('time_zone_contact');
    hfield.value = datum.id;
    ctime_zone.value = datum.time_zone;
  }
  function onCompOpened($e){
    //$("#comp_id").val("")
  }
  
  
  function onCompClosed($e){
    //$("#comp_id").val("");
  }  
  $('textarea').blur(function(){
     // var note_val = $("#note_notes").val();
     //if(note_val == "")
     //$(this).animate({height:'40px'});
  }); 
  function task_deal(deal_id)
  {
  $("#task_taskable_type").val('Deal');
  $("#task_taskable_id").val(deal_id);
  }
  function move_deal_status_wise(deal_id,status,is_current)
  {
    $("#deal_move_note").val('');
    $("#deal_id_move").val(deal_id);
    if(status == 1 || status == 3 || status == 6)
    {
      $("#incoming_move").show();
      $("#pipeline_move").hide();
    }
    else
    {
      $("#incoming_move").hide();
      $("#pipeline_move").show();
    }
    if(is_current == true)
    {
      $("#deal_move_is_current").attr("checked", true);
    }
    else
    {
      $("#deal_move_is_current").attr("checked", false);
    }
  }

  /*auto expandable textarea */
  var txt = $('#note_notes'),
      hiddenDiv = $(document.createElement('div')),
      content = null;
  
  txt.addClass('txtstuff');
  hiddenDiv.addClass('hiddendiv common');
  
  $('body').append(hiddenDiv);
  
  txt.on('keyup', function () {
  
      content = $(this).val();
  
      content = content.replace(/\n/g, '<br>');
      hiddenDiv.html(content + '<br class="lbr">');
  
      $(this).css('height', hiddenDiv.height()+20);
  
  });

  function change_stage(user, deal, name,obj){
   if(obj == 4){$('select#assigned_to_user').val($("#deal_assignid").val());$("#user_change_stage").hide();}
   else if(obj == 5){$('select#assigned_to_user').val("#{@current_user.id}");$("#user_change_stage").hide();}
   else{
     if(obj == 6)
    {
      $('select#assigned_to_user').val("#{@current_user.id}");
     }else{$('select#assigned_to_user').val($("#deal_assignid").val());}
     $("#user_change_stage").show();
    }
    if(obj == 3 || obj == 5 || obj == 6){
      $('#add_note').attr('required',true);
     }else{$('#add_note').attr('required',false);}
   var asg_id = $("#deal_assignid").val();
   $("#dealmoveshow").modal('show');
   $("#deal_id_show").val(deal);
   $("#deal_move_deal_status").val(user);
  } 
 
  function change_assign(user, deal,name){
   
   $("#deal_assignid").val(user)
   $("#chng_asgn").html('<img src= "/assets/loading.gif"/><span class="caret"></span>');
   var posturl= "/reassign_user_to_deals";
    var qstring= "?reassign_deal_ids="+deal+"&reassigned_to="+user;
    $.ajax( {
      type: "POST",
      url: posturl + qstring,
      success: function(result) {
        //window.location.reload();
        //alert(result);
        $("#chng_asgn").delay(1000).html(name + '<span class="caret"></span>');
      }
    });
 
  }
  function edit_deal_popup(id){
    $.ajax({
      type: "POST",
      url: "/edit_lead",
      dataType: 'json',
      async: true,
      data: {id:id},
      beforeSend: function(){
        $("#task_loader").show();
      },
      success: function(data)
      {
      },
      error: function(data) {
        $("#task_loader").hide();
      },
      complete: function(data) {
        $("#edit_deal").html(data.responseText);
        $("#task_loader").hide();
      }
    });
  }  

  function remove_edit_form(){
    $("#editDealModal").modal('hide');
    $("#edit_deal").html('');
  }
  $('#associate_con').bind('ajax:complete', function(evt, data, status, xhr){
    $("#addCon").modal('hide');
    $("#show_loader").show();
    reload_deal_contacts();
    $("#show_loader").hide();
    // $(document).trigger("add-alerts", [{'message': data.responseText ,'priority': 'success'}]);
    show_alert_message('success',data.responseText);
  });
  function delete_contact(id){
    if(confirm("Do you want to delete the contact?")){
      $.ajax({
        type: "DELETE",
        url: "/delete_lead_con",
        dataType: 'json',
        async: true,
        data: {id:id},
        beforeSend: function(){
          $("#show_loader").show();
        },
        success: function(data)
        {
          //$("#task_loader").hdie();
        },
        error: function(data) {
          //$("#task_loader").hide();
        },
        complete: function(data) {
          $("#show_loader").show();
          reload_deal_contacts();
          $("#show_loader").hide();
          // $(document).trigger("add-alerts", [{'message': "Contact has been deleted successfully." ,'priority': 'success'}]);
          show_alert_message('success',"Contact has been deleted successfully.");
        }
      });
    } else {
        return false;
    }
  }
  $('#move_deal_stage').bind('ajax:complete', function(evt, data, status, xhr){
    $("#dealmoveshow").modal('hide');
    if(data.responseJSON.deal_org_id == 4)
     $("a#chng_stg").html(data.responseJSON.stag_name).removeAttr("href").removeAttr("class").removeAttr("data-toggle").css({ "color":"green",  "text-decoration":"none"});
    else
      $("a#chng_stg").html(data.responseJSON.stag_name + '<span class="caret"></span>');
    $("#last_touch_div").text(data.responseJSON.last_touch);    
    $('.lead_asgn_to').text(data.responseJSON.assigned_user).attr("data-value", data.responseJSON.assigned_user_id);
    $("#last_touch_div").html("less than a minute ago")
    //timeout_trigger();
    //reload_task_widget();
    show_alert_message('success',data.responseJSON.msg);
  });



  $('.profile_time_zone').editable({
      url: '/save_contact_timezone',
      pk: $("#contact_type").val(),
      title: 'Enter time zone',
      type: 'select',
      placement: 'top',
      validate: function(value) {
        if($.trim(value) == '' || $.trim(value) == 'NA')
          return 'Please enter time zone';
       
      },
      source: [
              {value: 'Hawaii', text:'(GMT-10:00) Hawaii'},
              {value: 'Alaska', text:'(GMT-09:00) Alaska'},
              {value: 'Pacific Time (US & Canada)', text:'(GMT-08:00) Pacific Time (US & Canada)'},
              {value: 'Arizona', text:'(GMT-07:00) Arizona'},
              {value: 'Mountain Time (US & Canada)', text:'(GMT-07:00) Mountain Time (US & Canada)'},
              {value: 'Central Time (US & Canada)', text:'(GMT-06:00) Central Time (US & Canada)'},
              {value: 'Eastern Time (US & Canada)', text:'(GMT-05:00) Eastern Time (US & Canada)'},
              {value: 'Indiana (East)', text:'(GMT-05:00) Indiana (East)'},
              {value: '', text:'-------------'},
              {value: 'American Samoa', text:'(GMT-11:00) American Samoa'},
              {value: 'International Date Line West', text:'(GMT-11:00) International Date Line West'},
              {value: 'Midway Island', text:'(GMT-11:00) Midway Island'},
              {value: 'Tijuana', text:'(GMT-08:00) Tijuana'},
              {value: 'Chihuahua', text:'(GMT-07:00) Chihuahua'},
              {value: 'Mazatlan', text:'(GMT-07:00) Mazatlan'},
              {value: 'Central America', text:'(GMT-06:00) Central America'},
              {value: 'Guadalajara', text:'(GMT-06:00) Guadalajara'},
              {value: 'Mexico City', text:'(GMT-06:00) Mexico City'},
              {value: 'Monterrey', text:'(GMT-06:00) Monterrey'},
              {value: 'Saskatchewan', text:'(GMT-06:00) Saskatchewan'},
              {value: 'Bogota', text:'(GMT-05:00) Bogota'},
              {value: 'Lima', text:'(GMT-05:00) Lima'},
              {value: 'Quito', text:'(GMT-05:00) Quito'},
              {value: 'Caracas', text:'(GMT-04:30) Caracas'},
              {value: 'Atlantic Time (Canada)', text:'(GMT-04:00) Atlantic Time (Canada)'},
              {value: 'Georgetown', text:'(GMT-04:00) Georgetown'},
              {value: 'La Paz', text:'(GMT-04:00) La Paz'},
              {value: 'Santiago', text:'(GMT-04:00) Santiago'},
              {value: 'Newfoundland', text:'(GMT-03:30) Newfoundland'},
              {value: 'Brasilia', text:'(GMT-03:00) Brasilia'},
              {value: 'Buenos Aires', text:'(GMT-03:00) Buenos Aires'},
              {value: 'Greenland', text:'(GMT-03:00) Greenland'},
              {value: 'Mid-Atlantic', text:'(GMT-02:00) Mid-Atlantic'},
              {value: 'Azores', text:'(GMT-01:00) Azores'},
              {value: 'Cape Verde Is', text:'(GMT-01:00) Cape Verde Is.'},
              {value: 'Casablanca', text:'(GMT+00:00) Casablanca'},
              {value: 'Dublin', text:'(GMT+00:00) Dublin'},
              {value: 'Edinburgh', text:'(GMT+00:00) Edinburgh'},
              {value: 'Lisbon', text:'(GMT+00:00) Lisbon'},
              {value: 'London', text:'(GMT+00:00) London'},
              {value: 'Monrovia', text:'(GMT+00:00) Monrovia'},
              {value: 'UTC', text:'(GMT+00:00) UTC'},
              {value: 'Amsterdam', text:'(GMT+01:00) Amsterdam'},
              {value: 'Belgrade', text:'(GMT+01:00) Belgrade'},
              {value: 'Berlin', text:'(GMT+01:00) Berlin'},
              {value: 'Bern', text:'(GMT+01:00) Bern'},
              {value: 'Bratislava', text:'(GMT+01:00) Bratislava'},
              {value: 'Brussels', text:'(GMT+01:00) Brussels'},
              {value: 'Budapest', text:'(GMT+01:00) Budapest'},
              {value: 'Copenhagen', text:'(GMT+01:00) Copenhagen'},
              {value: 'Ljubljana', text:'(GMT+01:00) Ljubljana'},
              {value: 'Madrid', text:'(GMT+01:00) Madrid'},
              {value: 'Paris', text:'(GMT+01:00) Paris'},
              {value: 'Prague', text:'(GMT+01:00) Prague'},
              {value: 'Rome', text:'(GMT+01:00) Rome'},
              {value: 'Sarajevo', text:'(GMT+01:00) Sarajevo'},
              {value: 'Skopje', text:'(GMT+01:00) Skopje'},
              {value: 'Stockholm', text:'(GMT+01:00) Stockholm'},
              {value: 'Vienna', text:'(GMT+01:00) Vienna'},
              {value: 'Warsaw', text:'(GMT+01:00) Warsaw'},
              {value: 'West Central Africa', text:'(GMT+01:00) West Central Africa'},
              {value: 'Zagreb', text:'(GMT+01:00) Zagreb'},
              {value: 'Athens', text:'(GMT+02:00) Athens'},
              {value: 'Bucharest', text:'(GMT+02:00) Bucharest'},
              {value: 'Cairo', text:'(GMT+02:00) Cairo'},
              {value: 'Harare', text:'(GMT+02:00) Harare'},
              {value: 'Helsinki', text:'(GMT+02:00) Helsinki'},
              {value: 'Istanbul', text:'(GMT+02:00) Istanbul'},
              {value: 'Jerusalem', text:'(GMT+02:00) Jerusalem'},
              {value: 'Kyiv', text:'(GMT+02:00) Kyiv'},
              {value: 'Pretoria', text:'(GMT+02:00) Pretoria'},
              {value: 'Riga', text:'(GMT+02:00) Riga'},
              {value: 'Sofia', text:'(GMT+02:00) Sofia'},
              {value: 'Tallinn', text:'(GMT+02:00) Tallinn'},
              {value: 'Vilnius', text:'(GMT+02:00) Vilnius'},
              {value: 'Baghdad', text:'(GMT+03:00) Baghdad'},
              {value: 'Kuwait', text:'(GMT+03:00) Kuwait'},
              {value: 'Minsk', text:'(GMT+03:00) Minsk'},
              {value: 'Nairobi', text:'(GMT+03:00) Nairobi'},
              {value: 'Riyadh', text:'(GMT+03:00) Riyadh'},
              {value: 'Tehran', text:'(GMT+03:30) Tehran'},
              {value: 'Abu Dhabi', text:'(GMT+04:00) Abu Dhabi'},
              {value: 'Baku', text:'(GMT+04:00) Baku'},
              {value: 'Moscow', text:'(GMT+04:00) Moscow'},
              {value: 'Muscat', text:'(GMT+04:00) Muscat'},
              {value: 'St. Petersburg', text:'(GMT+04:00) St. Petersburg'},
              {value: 'Tbilisi', text:'(GMT+04:00) Tbilisi'},
              {value: 'Volgograd', text:'(GMT+04:00) Volgograd'},
              {value: 'Yerevan', text:'(GMT+04:00) Yerevan'},
              {value: 'Kabul', text:'(GMT+04:30) Kabul'},
              {value: 'Islamabad', text:'(GMT+05:00) Islamabad'},
              {value: 'Karachi', text:'(GMT+05:00) Karachi'},
              {value: 'Tashkent', text:'(GMT+05:00) Tashkent'},
              {value: 'Chennai', text:'(GMT+05:30) Chennai'},
              {value: 'Kolkata', text:'(GMT+05:30) Kolkata'},
              {value: 'Mumbai', text:'(GMT+05:30) Mumbai'},
              {value: 'New Delhi', text:'(GMT+05:30) New Delhi'},
              {value: 'Sri Jayawardenepura', text:'(GMT+05:30) Sri Jayawardenepura'},
              {value: 'Kathmandu', text:'(GMT+05:45) Kathmandu'},
              {value: 'Almaty', text:'(GMT+06:00) Almaty'},
              {value: 'Astana', text:'(GMT+06:00) Astana'},
              {value: 'Dhaka', text:'(GMT+06:00) Dhaka'},
              {value: 'Ekaterinburg', text:'(GMT+06:00) Ekaterinburg'},
              {value: 'Rangoon', text:'(GMT+06:30) Rangoon'},
              {value: 'Bangkok', text:'(GMT+07:00) Bangkok'},
              {value: 'Hanoi', text:'(GMT+07:00) Hanoi'},
              {value: 'Jakarta', text:'(GMT+07:00) Jakarta'},
              {value: 'Novosibirsk', text:'(GMT+07:00) Novosibirsk'},
              {value: 'Beijing', text:'(GMT+08:00) Beijing'},
              {value: 'Chongqing', text:'(GMT+08:00) Chongqing'},
              {value: 'Hong Kong', text:'(GMT+08:00) Hong Kong'},
              {value: 'Krasnoyarsk', text:'(GMT+08:00) Krasnoyarsk'},
              {value: 'Kuala Lumpur', text:'(GMT+08:00) Kuala Lumpur'},
              {value: 'Perth', text:'(GMT+08:00) Perth'},
              {value: 'Singapore', text:'(GMT+08:00) Singapore'},
              {value: 'Taipei', text:'(GMT+08:00) Taipei'},
              {value: 'Ulaan Bataar', text:'(GMT+08:00) Ulaan Bataar'},
              {value: 'Urumqi', text:'(GMT+08:00) Urumqi'},

              {value: 'Irkutsk', text:'(GMT+09:00) Irkutsk'},
              {value: 'Osaka', text:'(GMT+09:00) Osaka'},
              {value: 'Sapporo', text:'(GMT+09:00) Sapporo'},
              {value: 'Seoul', text:'(GMT+09:00) Seoul'},
              {value: 'Tokyo', text:'(GMT+09:00) Tokyo'},
              {value: 'Adelaide', text:'(GMT+09:30) Adelaide'},
              {value: 'Darwin', text:'(GMT+09:30) Darwin'},
              {value: 'Brisbane', text:'(GMT+10:00) Brisbane'},
              {value: 'Canberra', text:'(GMT+10:00) Canberra'},
              {value: 'Guam', text:'(GMT+10:00) Guam'},
              {value: 'Hobart', text:'(GMT+10:00) Hobart'},
              {value: 'Melbourne', text:'(GMT+10:00) Melbourne'},
              {value: 'Port Moresby', text:'(GMT+10:00) Port Moresby'},
              {value: 'Sydney', text:'(GMT+10:00) Sydney'},
              {value: 'Yakutsk', text:'(GMT+10:00) Yakutsk'},
              {value: 'New Caledonia', text:'(GMT+11:00) New Caledonia'},
              {value: 'Vladivostok', text:'(GMT+11:00) Vladivostok'},
              {value: 'Auckland', text:'(GMT+12:00) Auckland'},
              {value: 'Fiji', text:'(GMT+12:00) Fiji'},
              {value: 'Kamchatka', text:'(GMT+12:00) Kamchatka'},
              {value: 'Magadan', text:'(GMT+12:00) Magadan'},
              {value: 'Marshall Is.', text:'(GMT+12:00) Marshall Is.'},
              {value: 'Solomon Is.', text:'(GMT+12:00) Solomon Is.'},
              {value: 'Wellington', text:'(GMT+12:00) Wellington'},
              {value: 'Nuku alofa', text:'(GMT+13:00) Nuku alofa'},
              {value: 'Samoa', text:'(GMT+13:00) Samoa'},
              {value: 'Tokelau Is', text:'(GMT+13:00) Tokelau Is'}
      ],
      success: function(data) {
       name =$("#cur_selected_contact").val();
       $("#my_curtime"+name).html(data);
       $(".profile_time_zone").css({"color": "#3E6BA1","font-style": "normal"});
       $(".current-time").html(data);
      },
      error: function(data) {
        //alert('error') 
        /* actions on validation error (or ajax error) */
        var msg = '';
        if(data.errors) { //validation error
          $.each(data.errors, function(k, v) { msg += k+": "+v+"<br>"; });
        } 
        else if(data.responseText) { //ajax error
        msg = data.responseText;
      }
    }
    });
  function changePriority(id,priority,priority_id){
    $("#task_loader").show();
    $.ajax({
      url: "/change_priority",
      data: {id: id,priority_id: priority_id},
      success: function(data){ 
        //alert("Success");
        if(priority=="Hot")
          pr_cl = "hot_pri"
        else if(priority=="Warm")
          pr_cl = "warm_pri"
        else
          pr_cl = "cold_pri"
        $(".priority_label").removeClass("hot_pri warm_pri cold_pri").addClass(pr_cl);
        $(".priority_label").html(data);
        $(".priority_border").removeClass("hot_border warm_border cold_border");
        $(".priority_border").addClass(data.toLowerCase()+"_border");
        $("#task_loader").hide();
      },
      error: function(data){
        $("#task_loader").hide();
        alert('Got an error while changing priority.');
      }
    });
  }

  $(".show_onboarding.show").click(function(){
    $(".onboarding_page").show();
    $(".user_onbording_container").hide();
    $(".onboarding_leads_activity").show();
  })

  function show_title_sec(txt){
    if(txt=="true"){
      $('.show_title_sec').show();
      $('#note_title').attr('required', 'required');
      $('#note_note_type_id').attr('required', 'required');
      $('.modal-title').text('Add Note');
      $('#notes_submit_btn').attr('onclick', "getd('hidden_note');");
      $('.show_attachment_error').text("");
      //$('#notes_submit_btn').removeClass('check_attachment');
    }else{
      $('.show_title_sec').hide();
      $('#note_title').removeAttr('required');
      $('#note_note_type_id').removeAttr('required');
      $('.modal-title').text('Attach Files');
      $('#notes_submit_btn').attr('onclick', "getd('hidden_note');check_attachment(event);")
      $('.show_attachment_error').text("");
      //$('#notes_submit_btn').addClass('check_attachment');
    }
  }
  function view_image(img_url, img_name){
    $("#ViewImageModal .modal-body").html("<img src='/assets/ajax-loader2.gif'/>");
    
    $("#ViewImageModal .modal-body").html("<div style='padding:20px;text-align:center;max-height: 350px;overflow-y: auto;margin-bottom: 20px;'><img src='"+img_url+"' style='max-width:100%;'/><div style='position:absolute;right:10px;bottom:10px'><a href = \'"+img_url+"\' download = \'"+img_name+"\' title = \'Download - "+img_name+"\' >Download</a></div></div>");
  }

  $(function() {
    $('.note_types').click(function() {
      $('#task_loader,.fixed_loader').show();
      var note_type_id = $(this).attr('id');
      var hdn_note_id = $(this).parent().find(".hdn_note_id").val();
      $.ajax({
        url: "/update_note_type",
        method: "PUT",
        data: {hdn_note_id: hdn_note_id, note_type_id: note_type_id},
        success: function(data){ 
          $('#task_loader,.fixed_loader').hide();
          $("#labelNoteType_"+data['note_id']).css("background", data['note_type_color']).text(data['note_type_name']);
          show_alert_message('success', 'Note type updated successfully.');
        },
        error: function(data){
          show_alert_message("danger","Oops! Something went wrong!");
        }
      });
      //$(this.form).submit()
    });
  });
  //$('#update_note_type').on('ajax:complete', function(e, data, status, xhr){
  //  $('#task_loader,.fixed_loader').hide();
  //  show_alert_message('success', 'Note type updated successfully.');
  //})
  $('#noteTextModal').on('hidden.bs.modal', function () {
    $(".ajax-file-upload-statusbar").remove();
    $(".tmp_file_ids").val("");
    $("#prv_pub").remove();
  })

  function check_attachment(event) {
    if($(".ajax-file-upload-statusbar").length == 0){
      $('.show_attachment_error').text("Please attach your file(s).");
      event.preventDefault();
      return false;
    }
  };

  $('.edit_note').on('click', function(){
    var id = $(this).data("id"); 
    $("#noteTextModal").modal("show");
    $(".add_note_form").html("<div class='ldrimg' style='display: block; left: 35%;text-align: center; vertical-align: middle;'> <img  src='/assets/ajax-loader2.gif'/></div>");
    $.ajax({
      url: "/edit_deal_note",
      data: {id: id},
      success: function(data){ 
        $(".add_note_form").html(data);
        $(".show_title_sec").show();
      },
      error: function(data){
        show_alert_message("danger","Oops! Something went wrong!");
      }
    });
  })
  $('.delete_note').on('click', function(){
    if(confirm("Are you sure?")){  
      var id = $(this).data("id"); 
      $.ajax({
        url: "/delete_deal_note",
        data: {id: id},
        success: function(data){ 
          show_alert_message("success","Note has been deleted successfully.");
          $(".quick_note_row_"+id).remove();
          $(".activity_"+data).remove();
        },
        error: function(data){
        }
      });
    }
  })

  function changePaymentTypeInLeadDetails(id, status){
    $("#task_loader, .fixed_loader").show();
    $.ajax({
      url: "/change_payment_type_in_lead_details",
      data: {id: id,status: status},
      success: function(data){
        $(".lead-details-page .deal_payment_status").html(data);
        $(".lead-details-page .deal_payment_status").attr("tooltipText",data);
        $("#task_loader, .fixed_loader").hide();
        show_alert_message("success", "Payment status updated successfully.")
      },
      error: function(data){
        $("#task_loader, .fixed_loader").hide();
      }
    });
  }

  function load_activity_cum_deals(data){
    $(".cont_tabs a").removeClass("active");
    $("."+data+"-tab").addClass("active");
    $.ajax({
      type: "POST",
      url: "/opportunity_widget",
      data: {tab_type: data, id: $("#deal_id_timeout").val()},
      beforeSend: function(){
        $("#task_loader,.fixed_loader").show();
      },
      error: function(data) {
        $("#task_loader,.fixed_loader").hide();
      },
      complete: function(data) {
        $(".activity_cum_deals_div").html(data.responseText);
        $("#task_loader,.fixed_loader").hide();
        // initialize_tooltipster();
      }

    });
  }

  function check_custom(obj){
    var val = $(obj).val();
    if (val == "Custom Reason"){
      $("#custom_reason").css("border-color", "#e6e8e8");
      $(".custom_reason_field").show();
    }else{
      $(".custom_reason_field").val('');
      $(".custom_reason_field").hide();
    }
  }
  function changeUserLabel(id, user_label_name){
    $("#task_loader,.fixed_loader").show();
    $.ajax({
      url: "/change_user_label",
      data: {id: id,user_label_name: user_label_name},
      success: function(data){ 
        $(".user_label_nm").html(data);
        $("#task_loader,.fixed_loader").hide();
      },
      error: function(data){
        $("#task_loader,.fixed_loader").hide();
        alert('Got an error while changing user label.');
      }
    });
  }
  function changeUserSource(id, source_id){
    $("#task_loader,.fixed_loader").show();
    $.ajax({
      url: "/change_deal_source",
      data: {id: id,source_id: source_id},
      success: function(data){ 
        $(".source_nm").html(data);
        $("#task_loader,.fixed_loader").hide();
      },
      error: function(data){
        $("#task_loader,.fixed_loader").hide();
        alert('Got an error while changing user label.');
      }
    });
  }